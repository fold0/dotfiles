#!/bin/bash
# Tunes system to maximum performance

set -e -o pipefail

GOVERNOR=${1:-performance}
NPROC=$(nproc)
PROCS=$(seq 0 $((NPROC - 1)))

for i in $PROCS; do
  GFILE="/sys/devices/system/cpu/cpu$i/cpufreq/scaling_governor"
  if ! [[ -f "$GFILE"  ]]; then
    echo "Error: can't find $GFILE"
    exit 1
  fi

  OLD_GOVERNOR=$(cat $GFILE)
  if [[ "$OLD_GOVERNOR" != "$GOVERNOR" ]]; then
    break
  fi
done

if [[ "$OLD_GOVERNOR" == "$GOVERNOR" ]]; then
  echo "Already at $GOVERNOR"
  exit 0
fi

if [[ $UID != 0 ]]; then
  echo "Root access needed to modify state, re-running under sudo"
  sudo "$0" "$@"
  exit $?
fi

echo -n "CPU governor $OLD_GOVERNOR -> $GOVERNOR "

for i in $PROCS; do
  cd "/sys/devices/system/cpu/cpu$i/cpufreq"
  echo "$GOVERNOR" >scaling_governor
  if [[ -f cpuinfo_max_freq ]]; then
    if [[ "$GOVERNOR" == "performance" ]]; then
      cat cpuinfo_max_freq >scaling_max_freq
      cat cpuinfo_max_freq >scaling_min_freq
    else
      cat cpuinfo_min_freq >scaling_min_freq
      cat cpuinfo_max_freq >scaling_max_freq
    fi
  fi
  echo -n .
done
echo

if which x86_energy_perf_policy >/dev/null 2>&1; then
  if [[ "$GOVERNOR" == "performance" ]]; then
    echo x86_energy_perf_policy performance
    x86_energy_perf_policy performance
  else
    echo x86_energy_perf_policy normal
    x86_energy_perf_policy normal
  fi
fi

if grep -q 'E5-26.. v3' /proc/cpuinfo; then
  echo "MSR tweaks for $GOVERNOR"
  modprobe msr
  if [[ "$GOVERNOR" == "performance" ]]; then
    wrmsr --all 0x620 0x1e1e  # uncore 3.0GHz
  else
    wrmsr --all 0x620 0x0c1e  # uncore 1.2-3.0GHz
  fi
fi

echo "PCI/USB power policies update"
for f in $(ls /sys/bus/usb/devices/*/power/control /sys/bus/pci/devices/*/power/control); do
  if [[ "$GOVERNOR" == "performance" ]]; then
    echo on >$f
  else
    echo auto >$f
  fi
done
