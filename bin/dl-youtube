#!/bin/bash

if ! which youtube-dl >/dev/null 2>&1; then
  if grep -q hypervisor /proc/cpuinfo && (groups | grep -q sudo); then
    (set -x; sudo bash -c 'apt-get update && apt-get install youtube-dl')
  fi
  if ! which youtube-dl >/dev/null 2>&1; then
    echo "Error: youtube-dl is not installed"
    exit 1
  fi
fi

IDS=()
for url in "$@"; do
  if [[ "$url" =~ ^[-_a-zA-Z0-9]{11} ]]; then
    IDS+=("$url")
    echo "videoid $url"
  elif [[ "$url" =~ .*[/?=]([-_a-zA-Z0-9]{11})$ ]]; then
    IDS+=("${BASH_REMATCH[1]}")
  elif [[ "$url" =~ .*[?\&]v=([-_a-zA-Z0-9]{11})\&.*$ ]]; then
    IDS+=("${BASH_REMATCH[1]}")
  elif [[ "$url" =~ .*/playlist.*[?\&]list=.*$ ]]; then
    echo "Found playlist URL: $url"

    tmp="$(mktemp)"
    youtube-dl -j --flat-playlist "$url" >"$tmp"
    if [[ $? -ne 0 ]]; then
      rm -f "$tmp"
      echo "ERROR: failed to fetch playlist $url"
      exit 1
    fi

    for x in $(cat "$tmp" | egrep -o '"id": "[-_A-Za-z0-9]{11}"' | egrep -o '[^"]{11}'); do
      echo "Found video: $x"
      IDS+=("$x")
    done
  else
    echo "Unrecognized URL: $url"
    exit 1
  fi
done

if [[ ${#IDS[@]} == 0 ]]; then
  echo "Usage: $0 URL [URL ...]"
  exit 1
fi

for id in "${IDS[@]}"; do
  url="http://www.youtube.com/watch?v=$id"
  tmpdir="tmp-dl-youtube.$id"
  if [[ -d "$tmpdir" ]]; then
    rm -rf "$tmpdir"
  fi

  if ls *"$id"* >/dev/null 2>&1; then
    echo "$url already downloaded"
    continue
  fi

  echo "Downloading $url"
  while true; do
    rm -rf "$tmpdir"
    mkdir -p "$tmpdir"
    (cd "$tmpdir" && youtube-dl "$url")
    if [[ $? -ne 0 ]]; then
      sleep 10
      if [[ $? -ne 0 ]]; then
        exit $?
      fi
      continue;
    fi
    mv -f "$tmpdir"/*"$id"* ./
    rmdir "$tmpdir"
    break
  done
done
